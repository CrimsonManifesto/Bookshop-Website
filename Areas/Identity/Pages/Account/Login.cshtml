@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<div class="container d-flex justify-content-center align-items-center">
    <div class="bg-white p-10 my-3 border rounded shadow align-items-center" id="loginContainer">
        <div class="d-flex justify-content-center py-4">
            <h1>@ViewData["Title"]</h1>
        </div>
        <div class="d-flex flex-column align-items-center">
            <form class="d-flex flex-column w-75" id="account" method="post">
                <!-- Email input -->
                <div data-mdb-input-init class="form-outline mb-4">
                    <label class="form-label" for="form2Example1">Email address</label>
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                </div>

                <!-- Password input -->
                <div data-mdb-input-init class="form-outline mb-4">
                    <label class="form-label" for="form2Example2">Password</label>
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                </div>

                <!-- 2 column grid layout for inline styling -->
                <div class="row mb-4">
                    <div class="col d-flex">
                        <!-- Checkbox -->
                        <div class="form-check">
                            <label asp-for="Input.RememberMe" class="form-label user-select-none">
                                <input class="form-check-input user-select-none" asp-for="Input.RememberMe" />
                                @Html.DisplayNameFor(m => m.Input.RememberMe)
                            </label>
                        </div>
                    </div>

                    <div class="col d-flex justify-content-end">
                        <!-- Simple link -->
                        <a class="custom-link" asp-page="./ForgotPassword" asp-route-returnUrl="@Model.ReturnUrl">Forgot password?</a>
                    </div>
                </div>

                @if (ModelState.ErrorCount > 0)
                {
                    <div class="alert alert-danger">
                        @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <p>@error.ErrorMessage</p>
                        }
                    </div>
                }

                <!-- Submit button -->
                <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-red">Log in</button>

                <!-- Register buttons -->
                <div class="text-center pt-3">
                    <p>Not a member? <a class="custom-link" asp-page="./Register">Register</a></p>
                    <p>or sign up with:</p>

                </div>
            </form>

            <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                <div>
                    <p>
                        @foreach (var provider in Model.ExternalLogins!)
                        {
                            if (provider.Name == "Google")
                            {

                                <button type="submit" class="btn btn-link btn-floating mx-1" name="provider" value="@provider.Name" title="Log in using your Google account">
                                    <i class="fab fa-google"></i>
                                </button>
                            }
                        }
                    </p>
                </div>
            </form>
        </div>
    </div>
</div>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />

}


<style>
    #loginContainer {
        width: 40rem;
        height: 40rem;
    }

    .fa-google {
        background: conic-gradient(from -45deg, #ea4335 110deg, #4285f4 90deg 180deg, #34a853 180deg 270deg, #fbbc05 270deg) 73% 55%/150% 150% no-repeat;
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        -webkit-text-fill-color: transparent;
    }

    .btn-red {
        background-color: red;
        color: white;
    }

    .btn-red:hover {
        background-color: red;
        color: white;
    }

    .custom-link {
        text-decoration: none;
        color: red;
        font-weight: bold;
    }


</style>

