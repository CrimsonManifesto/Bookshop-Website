@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var profilePictureUrl = Context.Items["ProfilePictureUrl"] as string;
}

@if (SignInManager.IsSignedIn(User))
{
    <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" id="navButton">
        <div>
            <picture>
                <source srcset="@($"{profilePictureUrl}?width=30&height=30&mode=crop&format=webp")" type="image/webp">
                <img src="@($"{profilePictureUrl}?width=30&height=30&mode=crop")" alt="Profile Picture" class="profile-image" width="30" height="30" />
            </picture>
        </div>
        <div>
            Me
        </div>
    </a>
    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", new { area = "" })">
        <button type="submit" class="nav-link btn btn-link" id="navButton">
            <div>
                <i class="fa fa-sign-out"></i>
            </div>
            <div>
                Logout
            </div>
        </button>
    </form>
}
else
{
    <a class="nav-link" asp-area="Identity" asp-page="/Account/Login" id="navButton">
        <div>
            <i class="fa-solid fa-user"></i>
        </div>
        <div>
            Account
        </div>
    </a>
    <a class="nav-link" asp-area="Identity" asp-page="/Account/Login" id="navButton">
        <div>
            <i class="fa fa-sign-in"></i>
        </div>
        <div>
            Login
        </div>
    </a>
}

<style>
    .profile-image {
        border-radius: 15px;
    }
</style>
